version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: cobranza-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-cobranza_admin_2024}
      MONGO_INITDB_DATABASE: cobranza_ai
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    ports:
      - "27017:27017"
    networks:
      - cobranza-network
    command: --auth --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis:
    image: redis:7.2-alpine
    container_name: cobranza-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cobranza-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  cobranza-backend:
    image: node:18-alpine
    container_name: cobranza-backend
    restart: unless-stopped
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      MONGODB_URI: mongodb://admin:${MONGO_ROOT_PASSWORD:-cobranza_admin_2024}@mongodb:27017/cobranza_ai?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      NODE_ENV: production
      PORT: 3000
      JWT_SECRET: ${JWT_SECRET:-jwt_secret_default_change_this}
      EMAIL_USER: ${EMAIL_USER:-tu_email@gmail.com}
      EMAIL_PASS: ${EMAIL_PASS:-tu_app_password}
      TWILIO_SID: ${TWILIO_SID:-ACxxxxxxxxxxxxxxxxxxxxxxx}
      TWILIO_TOKEN: ${TWILIO_TOKEN:-tu_twilio_token}
      TWILIO_PHONE: ${TWILIO_PHONE:-+1234567890}
      TWILIO_WHATSAPP: ${TWILIO_WHATSAPP:-+14155238886}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-sk-xxxxxxxxxxxxxxxxxxxxxxx}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3001}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    volumes:
      - ./app:/app
      - ./logs:/app/logs
    networks:
      - cobranza-network
    depends_on:
      - mongodb
      - redis
    command: >
      sh -c "
        echo '🚀 Iniciando instalación de dependencias...' &&
        npm install express@4.18.2 mongoose@7.6.3 cors@2.8.5 bcryptjs@2.4.3 jsonwebtoken@9.0.2 nodemailer@6.9.7 twilio@4.19.0 dotenv@16.3.1 helmet@7.1.0 express-rate-limit@7.1.5 joi@17.11.0 moment@2.29.4 openai@4.20.1 axios@1.6.0 &&
        echo '✅ Dependencias instaladas' &&
        echo '🌐 Iniciando servidor...' &&
        node server.js
      "
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  nginx:
    image: nginx:alpine
    container_name: cobranza-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - cobranza-network
    depends_on:
      - cobranza-backend
    command: >
      sh -c "
        echo 'events { worker_connections 1024; }
        http {
          upstream backend { server cobranza-backend:3000; }
          server {
            listen 80;
            server_name localhost;
            location / {
              proxy_pass http://backend;
              proxy_set_header Host \$$host;
              proxy_set_header X-Real-IP \$$remote_addr;
              proxy_set_header X-Forwarded-For \$$proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto \$$scheme;
            }
            location /health { proxy_pass http://backend/api/health; }
          }
        }' > /etc/nginx/nginx.conf &&
        nginx -g 'daemon off;'
      "

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local  
  redis_data:
    driver: local

networks:
  cobranza-network:
    driver: bridge